VW <- V%*%t(W)
S <- VW/as.numeric(V%*%W)
S
elas<-(A/lambda)*S
elas
par(mfrow=c(1,1))
elas[elas==0]<-NA
image2(elas,mar=c(1,5,5.5,1),border="gray70",col=rev(heat.colors(10)))
swirl()
library(swirl)
swirl()
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting), main="Old Faithful data")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed),max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region, data = state, layout=c(4,1))
xyplot(Life.Exp~Income|region, data = state, layout=c(2,2))
library(swirl)
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy,data=mpg)
head
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
| (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(wind, Ozone))
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main = "Wind and Ozone in NYC")
may<-subset(airquality, Month==5)
?par(points)
points(may$Wind, may$Ozone,)
?par(points)
?points
points(may$Wind, may$Ozone, pch=17, col="blue")
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay<-subset(airquality, Month!=5)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col = c("blue", "red"), legend=c(May, "Other Months"))
legend("topright", pch=c(17,8), col = c("blue", "red"), legend=c("May", "Other Months"))
abline(mean(airquality$Wind), lty=2, ltw=2)
abline(mean(airquality$Wind), lty=2, lwd=2)
line(mean(airquality$Wind), lty=2, lwd=2)
?lty
??lty
line(mean(airquality$Wind))
line(v=mean(airquality$Wind))
abline(v=mean(airquality$Wind))
abline(v=mean(airquality$Wind), lty=2, lwd=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone)
title(main = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot( airquality$Solar.R, airquality$Ozone,main = "Ozone and Solar Radiation")
plot( airquality$Temp, airquality$Ozone,main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
bye()
swirl()
library(swirl)
swirl()
qplot(carat, price, data=diamonds, color=cut, geom_sooth="lm")
qplot(carat, price, data=diamonds, color=cut, geom_smooth="lm")
qplot(carat, price, data=diamonds, color=cut)+ geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets = .~cut)+ geom_smooth(method="lm")
g<-ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat, seq(0,1,lenght=4), na.rm=TRUE)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds, aes(depth, price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
dist(dataFrame)
hc<-hclus(distxy)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
bye()
swirl()
swirl()
ls()
rm(list=ls())
ls()
####Analisis multifactorial
install.packages("dplyr")
install.packages("readxl")
install.packages("ggpubr")
library(ggpubr)
library(readxl)
library(dplyr)
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos
Dataset<- read.csv("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Datos.csv")
MoveTime<-Datamedia$MoveTimeMean
#Abro los datos por media
Datamedia<- read.csv("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\DatosMedias.csv")
MoveTime<-Datamedia$MoveTimeMean
LiftOff<-Datamedia$LiftOffMean
LiftOffDiff<-Datamedia$LiftOffDiffMean
#### Outliers de Move Time
m<-median(Dataset$MoveTime)
m
sd<-sd(Dataset$MoveTime)
sd
out.max<-m+2*sd
out.min<-m-2*sd
no.outliers<-subset(Datamedia,MoveTime<out.max & MoveTime>out.min)
M<-mean(Dataset$MoveTime)
M
sd<-sd(Dataset$MoveTime)
sd
out.max<-m+2*sd
out.min<-m-2*sd
no.outliers<-subset(Datamedia,MoveTime<out.max & MoveTime>out.min)
#### Outliers de LiftOff
m<-median(Dataset$LiftOffLatency)
m
sd<-sd(Dataset$LiftOffLatency)
sd
out.max<-m+2*sd
out.min<-m-2*sd
#### Outliers de LiftOffDiff
m<-median(Dataset$liftOffDiff)
m
sd<-sd(Dataset$liftOffDiff)
sd
out.max<-m+2*sd
out.min<-m-2*sd
no.outliers<-subset(Datamedia,LiftOffDiff<out.max & LiftOffDiff>out.min)
ls()
rm(list=ls())
ls()
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos
Dataset<- read.csv("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Datos.csv")
#Saco outlier nro 56 de Lift Off
ID<-Dataset$ptid
no.outliersLiftOff<-subset(Dataset,ID!=456)
#Calculo la media total de Lift Off
MediaLiftoff<-mean(no.outliersLiftOff$LiftOffLatency)
MediaLiftoffDiff<-mean(no.outliersLiftOff$liftOffDiff)
#Abro archivo con medias
Datamedias<-read.csv("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\DatosMedias.csv")
#Saco el sujeto 456 de el dataset
DataMediasOutliers<-subset(Datamedias,Datamedias$LiftOffMean.Group.1!=456)
#Mediana lift Off
medianaLiftOff<-median(DataMediasOutliers$LiftOffMean)
#Mediana lift Off Diff
medianaLiftOffDiff<-median(DataMediasOutliers$LiftOffDiffMean)
########## 1. Analisis de Lift Off Time
####Grupos LiftOff
#Separo los sujetos en grupo A y B, lento y rapido
gruposliftoff<-data.frame(DataMediasOutliers$LiftOffMean.Group.1)#Nro de sujeto
gruposliftoff$Media<-DataMediasOutliers$LiftOffMean#Media de los LiftOff para el sujeto
gruposliftoff$grupo<-ifelse(as.numeric(gruposliftoff$Media) < medianaLiftOff, 'Grupo A', 'Grupo B')
########## 3. Analisis de Lift Off Diff
####Grupos Lift Off Diff
#Separo los sujetos en grupo A y B, lento y rapido
gruposLiftOffDiff<-data.frame(DataMediasOutliers$LiftOffMean.Group.1)#Nro de sujeto
gruposLiftOffDiff$Media<-DataMediasOutliers$LiftOffDiffMean#Media de los Move Time para el sujeto
gruposLiftOffDiff$grupo<-ifelse(as.numeric(gruposLiftOffDiff$Media) < medianaLiftOffDiff, 'Grupo A', 'Grupo B')
ls()
rm(list=ls())
ls()
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos que voy a usar
Dataset <-read.csv("DatosLiftOff.csv")
#Agrego compatibilidad
Dataset$Compatibilidad <- ifelse(Dataset$CueDirection>Dataset$SentenceDirection, 0,
ifelse(Dataset$CueDirection < Dataset$SentenceDirection, 0, 1))
write.csv(Dataset,"DatosLiftOff.csv", row.names = FALSE)
Dataset <-read.csv("DatosLiftOff.csv")
Dataset$Compatibilidad <- as.integer(Dataset$Compatibilidad)
#Nombro las variables
LiftOff<-Dataset$LiftOffLatency
MoveTime<-Dataset$MoveTime
LiftOffDiff<-Dataset$liftOffDiff
Individuo<-Dataset$ptid
Compatibilidad<-Dataset$Compatibilidad
GrupoLiftOff<-Dataset$Grupo
SentenceDur<-Dataset$SentDur
CueDir<-Dataset$CueDirection
SenDir<-Dataset$SentenceDirection
View(Dataset)
ls()
rm(list=ls())
ls()
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos
Dataset<- read.csv("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Datos.csv")
#Saco outlier nro 56 de Lift Off
ID<-Dataset$ptid
no.outliersLiftOff<-subset(Dataset,ID!=456)
#Calculo la media total de Lift Off
MediaLiftoff<-mean(no.outliersLiftOff$LiftOffLatency)
MediaLiftoffDiff<-mean(no.outliersLiftOff$liftOffDiff)
#Abro archivo con medias
Datamedias<-read.csv("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\DatosMedias.csv")
#Saco el sujeto 456 de el dataset
DataMediasOutliers<-subset(Datamedias,Datamedias$LiftOffMean.Group.1!=456)
#Mediana lift Off
medianaLiftOff<-median(DataMediasOutliers$LiftOffMean)
#Mediana lift Off Diff
medianaLiftOffDiff<-median(DataMediasOutliers$LiftOffDiffMean)
########## 1. Analisis de Lift Off Time
####Grupos LiftOff
#Separo los sujetos en grupo A y B, lento y rapido
gruposliftoff<-data.frame(DataMediasOutliers$LiftOffMean.Group.1)#Nro de sujeto
gruposliftoff$Media<-DataMediasOutliers$LiftOffMean#Media de los LiftOff para el sujeto
gruposliftoff$grupo<-ifelse(as.numeric(gruposliftoff$Media) < medianaLiftOff, 'Grupo A', 'Grupo B')
########## 3. Analisis de Lift Off Diff
####Grupos Lift Off Diff
#Separo los sujetos en grupo A y B, lento y rapido
gruposLiftOffDiff<-data.frame(DataMediasOutliers$LiftOffMean.Group.1)#Nro de sujeto
gruposLiftOffDiff$Media<-DataMediasOutliers$LiftOffDiffMean#Media de los Move Time para el sujeto
gruposLiftOffDiff$grupo<-ifelse(as.numeric(gruposLiftOffDiff$Media) < medianaLiftOffDiff, 'Grupo A', 'Grupo B')
''
write.csv(no.outliersLiftOff, "LiftOffNoOutliers", row.names = FALSE)
#Abro los datos que voy a usar
Dataset <-read.csv("DatosLiftOff.csv")
#Agrego compatibilidad
Dataset$Compatibilidad <- ifelse(Dataset$CueDirection>Dataset$SentenceDirection, 0,
ifelse(Dataset$CueDirection < Dataset$SentenceDirection, 0, 1))
ls()
rm(list=ls())
ls()
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos que voy a usar
Dataset <-read.csv("DatosLiftOff.csv")
#Agrego compatibilidad
Dataset$Compatibilidad <- ifelse(Dataset$CueDirection>Dataset$SentenceDirection, 0,
ifelse(Dataset$CueDirection < Dataset$SentenceDirection, 0, 1))
write.csv(Dataset,"DatosLiftOff.csv", row.names = FALSE)
Dataset <-read.csv("DatosLiftOff.csv")
Dataset$Compatibilidad <- as.integer(Dataset$Compatibilidad)
#Nombro las variables
LiftOff<-Dataset$LiftOffLatency
ls()
rm(list=ls())
ls()
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos
Dataset<- read.csv("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Datos.csv")
#Saco outlier nro 56 de Lift Off
ID<-Dataset$ptid
no.outliersLiftOff<-subset(Dataset,ID!=456)
write.csv(no.outliersLiftOff, "LiftOffNoOutliers", row.names = FALSE)
#Calculo la media total de Lift Off
MediaLiftoff<-mean(no.outliersLiftOff$LiftOffLatency)
MediaLiftoffDiff<-mean(no.outliersLiftOff$liftOffDiff)
#Abro archivo con medias
Datamedias<-read.csv("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\DatosMedias.csv")
#Saco el sujeto 456 de el dataset
DataMediasOutliers<-subset(Datamedias,Datamedias$LiftOffMean.Group.1!=456)
#Mediana lift Off
medianaLiftOff<-median(DataMediasOutliers$LiftOffMean)
#Mediana lift Off Diff
medianaLiftOffDiff<-median(DataMediasOutliers$LiftOffDiffMean)
########## 1. Analisis de Lift Off Time
####Grupos LiftOff
#Separo los sujetos en grupo A y B, lento y rapido
gruposliftoff<-data.frame(DataMediasOutliers$LiftOffMean.Group.1)#Nro de sujeto
gruposliftoff$Media<-DataMediasOutliers$LiftOffMean#Media de los LiftOff para el sujeto
gruposliftoff$grupo<-ifelse(as.numeric(gruposliftoff$Media) < medianaLiftOff, 'Grupo A', 'Grupo B')
View(gruposliftoff)
ls()
rm(list=ls())
ls()
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos que voy a usar
Dataset <-read.csv("DatosCompatibilidadLiftOff.csv")
#Abro los datos que voy a usar
Dataset <-read.csv("DatosCompatibilidadLiftOff.csv")
ls()
rm(list=ls())
ls()
#Abro los datos que voy a usar
Dataset <-read.csv("DatosCompatibilidadLiftOff.csv")
View(Dataset)
ls()
rm(list=ls())
ls()
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos que voy a usar
Dataset <-read.csv("DatosCompatibilidadLiftOff.csv")
#Agrego compatibilidad
Dataset$Compatibilidad <- ifelse(Dataset$CueDirection>Dataset$SentenceDirection, 0,
ifelse(Dataset$CueDirection < Dataset$SentenceDirection, 0, 1))
View(Dataset)
ls()
rm(list=ls())
ls()
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos que voy a usar
Dataset <-read.csv("DatosCompatibilidadLiftOff.csv")
View(Dataset)
ls()
rm(list=ls())
ls()
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos que voy a usar
Dataset <-read.csv("DatosCompatibilidadLiftOff.csv")
View(Dataset)
ls()
rm(list=ls())
ls()
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos que voy a usar
Dataset <-read.csv("DatosCompatibilidadLiftOff.csv")
View(Dataset)
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos que voy a usar
Dataset <-read.csv("DatosCompatibilidadLiftOff.csv")
#Agrego compatibilidad
Dataset$Compatibilidad <- ifelse(Dataset$CueDirection>Dataset$SentenceDirection, 0,
ifelse(Dataset$CueDirection < Dataset$SentenceDirection, 0, 1))
#Abro los datos que voy a usar
Dataset <-read.csv("DatosCompatibilidadLiftOff.csv")
#Agrego compatibilidad
Dataset$Compatibilidad <- ifelse(Dataset$CueDirection>Dataset$SentenceDirection, 0,
ifelse(Dataset$CueDirection < Dataset$SentenceDirection, 0, 1))
write.csv(Dataset,"DatosLiftOff.csv", row.names = FALSE)
Dataset <-read.csv("DatosLiftOff.csv")
Dataset$Compatibilidad <- as.integer(Dataset$Compatibilidad)
#Nombro las variables
LiftOff<-Dataset$LiftOffLatency
MoveTime<-Dataset$MoveTime
LiftOffDiff<-Dataset$liftOffDiff
Individuo<-Dataset$ptid
Compatibilidad<-Dataset$Compatibilidad
GrupoLiftOff<-Dataset$Grupo
SentenceDur<-Dataset$SentDur
CueDir<-Dataset$CueDirection
SenDir<-Dataset$SentenceDirection
###############Normalidad################3
shapiro.test(LiftOff)
ggplot(mapping = aes(sample = LiftOff)) + stat_qq_point(size = 2)
hist(LiftOff)
boxplot(LiftOff)
##Modelo Anova con interaccion:      LiftOff~Compatibilidad*GrupoLiftOff
modeloLiftOff1<-aov(LiftOff~Compatibilidad*GrupoLiftOff, data=Dataset)
summary(modeloLiftOff1)
#Modelo 2: Anova sin interaccion de 3 factores
modeloLiftOff2 <- update(modeloLiftOff1, . ~ . -Compatibilidad:GrupoLiftOff)
summary(modeloLiftOff2)
##Modelo Anova con interaccion:  LiftOff~Compatibilidad*GrupoLiftOff*SentenceDur
modeloLiftOffA<-aov(LiftOff~Compatibilidad*GrupoLiftOff*SentenceDur, data=Dataset)
summary(modeloLiftOffA)
SenDir<-as.character(SenDir)
modeloLiftOffxDirA<-aov(LiftOff~CueDir*SenDir*GrupoLiftOff, data=Dataset)
summary(modeloLiftOffxDirA)
#Testeo de componentes principales con Tukey
TukeyHSD(modeloLiftOffxDirA, which = "GrupoLiftOff")
TukeyHSD(modeloLiftOffxDirA, which = "SenDir")
with(Dataset, interaction.plot(GrupoLiftOff, SenDir, LiftOff, fun = mean,
main = "Interaction Plot"))
with(Dataset, interaction.plot(CueDir, SenDir, LiftOff, fun = mean,
main = "Interaction Plot"))
with(Dataset, interaction.plot(SentenceDur, SenDir, LiftOff, fun = mean,
main = "Interaction Plot"))
#Modelo 2: Anova sin interaccion de 3 factores
modeloLiftOffxDirB <- update(modeloLiftOffxDirA, . ~ . -CueDir:SenDir:GrupoLiftOff)
summary(modeloLiftOffxDirB)
#Modelo 3: Anova sin interaccion
modeloLiftOffxDirC <- aov(LiftOff~CueDir+SenDir+GrupoLiftOff)
summary(modeloLiftOffxDirC)
##Modelo Anova con interaccion y sentence duration
modeloLiftOffC<-aov(LiftOff~SenDir*CueDir*GrupoLiftOff*SentenceDur, data=Dataset)
summary(modeloLiftOffC)
with(Dataset, interaction.plot(GrupoLiftOff, SenDir, LiftOff, fun = mean,
main = "Interaction Plot"))
with(Dataset, interaction.plot(CueDir, SenDir, LiftOff, fun = mean,
main = "Interaction Plot"))
with(Dataset, interaction.plot(SentenceDur, SenDir, LiftOff, fun = mean,
main = "Interaction Plot"))
ls()
rm(list=ls())
ls()
#Seteo dir de trabajo
setwd("C:\\Users\\Antonella\\Desktop\\Doctorado\\ACE in L2\\3. Data\\Analisis sin sujetos outliers")
#Abro los datos que voy a usar
Dataset <-read.csv("DatosCompatibilidadLiftOff.csv")
#Agrego compatibilidad
Dataset$Compatibilidad <- ifelse(Dataset$CueDirection>Dataset$SentenceDirection, 0,
ifelse(Dataset$CueDirection < Dataset$SentenceDirection, 0, 1))
write.csv(Dataset,"DatosLiftOff.csv", row.names = FALSE)
Dataset <-read.csv("DatosLiftOff.csv")
Dataset$Compatibilidad <- as.integer(Dataset$Compatibilidad)
#Nombro las variables
LiftOff<-Dataset$LiftOffLatency
MoveTime<-Dataset$MoveTime
LiftOffDiff<-Dataset$liftOffDiff
Individuo<-Dataset$ptid
Compatibilidad<-Dataset$Compatibilidad
GrupoLiftOff<-Dataset$Grupo
SentenceDur<-Dataset$SentDur
CueDir<-Dataset$CueDirection
SenDir<-Dataset$SentenceDirection
###############Normalidad################3
shapiro.test(LiftOffDiff)
ggplot(mapping = aes(sample = LiftOffDiff)) + stat_qq_point(size = 2)
hist(LiftOffDiff)
boxplot(LiftOffDiff)
#Abro los datos que voy a usar
Dataset <-read.csv("LiftOffDiffNOOutrliers.csv")
#Agrego compatibilidad
Dataset$Compatibilidad <- ifelse(Dataset$CueDirection>Dataset$SentenceDirection, 0,
ifelse(Dataset$CueDirection < Dataset$SentenceDirection, 0, 1))
Dataset$Compatibilidad <- as.integer(Dataset$Compatibilidad)
#Nombro las variables
LiftOff<-Dataset$LiftOffLatency
MoveTime<-Dataset$MoveTime
LiftOffDiff<-Dataset$liftOffDiff
Individuo<-Dataset$ptid
Compatibilidad<-Dataset$Compatibilidad
GrupoLiftOff<-Dataset$Grupo
SentenceDur<-Dataset$SentDur
CueDir<-Dataset$CueDirection
SenDir<-Dataset$SentenceDirection
###############Normalidad################3
shapiro.test(LiftOffDiff)
ggplot(mapping = aes(sample = LiftOffDiff)) + stat_qq_point(size = 2)
hist(LiftOffDiff)
boxplot(LiftOffDiff)
GrupoLiftOff<-Dataset$Grupo.Lift.Off.Diff
SentenceDur<-Dataset$SentDur
CueDir<-Dataset$CueDirection
SenDir<-Dataset$SentenceDirection
###############Normalidad################3
shapiro.test(LiftOffDiff)
GrupoLiftOffDiff<-Dataset$Grupo.Lift.Off.Diff
##Modelo Anova con interaccion:      LiftOff~Compatibilidad*GrupoLiftOff
modeloLiftOffDiff1<-aov(LiftOffDiff~Compatibilidad*GrupoLiftOffDiff, data=Dataset)
summary(modeloLiftOff1)
summary(modeloLiftOffDiff1)
#Modelo 2: Anova sin interaccion de 3 factores
modeloLiftOffDiff2 <- update(modeloLiftOffDiff1, . ~ . -Compatibilidad:GrupoLiftOffDiff)
summary(modeloLiftOffDiff2)
AovLiftOffDiffSum1<-summary(modeloLiftOff1)
AovLiftOffDiffSum1<-summary(modeloLiftOffDiff1)
capture.output(AovLiftOffDiffSum1, file="AovLiftOffDiffSum1.doc")
##Modelo Anova con interaccion:  LiftOff~Compatibilidad*GrupoLiftOff*SentenceDur
modeloLiftOffDiffA<-aov(LiftOffDiff~Compatibilidad*GrupoLiftOffDiff*SentenceDur, data=Dataset)
summary(modeloLiftOffDiffA)
SenDir<-as.character(SenDir)
modeloLiftOffDiffxDirA<-aov(LiftOffDiff~CueDir*SenDir*GrupoLiftOffDiff, data=Dataset)
summary(modeloLiftOffDiffxDirA)
#Modelo 2: Anova sin interaccion de 3 factores
modeloLiftOffDiffxDirB <- update(modeloLiftOffDiffxDirA, . ~ . -CueDir:SenDir:GrupoLiftOffDiff)
summary(modeloLiftOffDiffxDirB)
##Modelo Anova con interaccion y sentence duration
modeloLiftOffDiffC<-aov(LiftOffDiff~SenDir*CueDir*GrupoLiftOffDiff*SentenceDur, data=Dataset)
summary(modeloLiftOffDiffC)
